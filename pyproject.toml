[tool.poetry]
name = "intranet"
version = "0.1.0"
description = ""
authors = ["Alphaspiderman <68412330+Alphaspiderman@users.noreply.github.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
python-dotenv = "^1.0.0"
sanic = {extras = ["ext"], version = "^23.12.1"}
PyJWT = {extras = ["crypto"], version = "^2.8.0"}
taskipy = "^1.13.0"
aiohttp = "^3.9.5"
pydantic = "^2.7.4"
jinja2 = "^3.1.4"
aiomysql = "^0.2.0"
aioping = "^0.4.0"
aiofiles = "^24.1.0"
aiocsv = "^1.3.2"

[tool.poetry.group.dev.dependencies]
flake8 = "^6.1.0"
black = "^23.9.1"
pre-commit = "^3.4.0"
python-dotenv = "^1.0.0"

[tool.taskipy.tasks]
server = { cmd = "python -m intranet.server", help = "Runs the API Server"}
prod = { cmd = "poetry run task start_tasks && poetry run task start_prod", help = "Runs the system for Production"}
start_tasks = { cmd = "python -m intranet.tasks", help = "Runs the Internal Task Server"}
start_prod = { cmd = "python -m sanic intranet.server --host=0.0.0.0 --port=8000 --fast", help = "Runs the Web+API Server for Production"}
lint = { cmd = "pre-commit run", help = "Lints project" }
lintall = { cmd = "pre-commit run --all-files", help = "Lints project" }
precommit = { cmd = "pre-commit install", help = "Installs the pre-commit git hook" }
format = { cmd = "black intranet", help = "Runs the black python formatter" }

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
